package boggledApp;


/**
* boggledApp/BoggledOperations.java .
* Generated by the IDL-to-Java compiler (portable), version "3.2"
* from corbaIDL.idl
* Tuesday, May 28, 2024 5:11:50 PM SGT
*/

public interface BoggledOperations 
{
  boolean register (String username, String password) throws boggledApp.usernameAlreadyExistsException;
  boolean login (String username, String password) throws boggledApp.userAlreadyLogInException, boggledApp.invalidCredentialsException, boggledApp.bannedAccountException;
  boolean verifyWord (int roomID, String word, String username) throws boggledApp.invalidWordException;
  int getPlayerScore (String username, int earnedPts);
  int calculateScore (int earnedPts);
  int pointsPerWord (String word);
  String[] createGameSinglePlayer ();
  int[] createGameMultiPlayer (String username);
  String[] getCharacters (int roomID);
  boolean leaveRoom (int roomID, String username);
  boolean cancelRoom (int roomID);
  String[] startGame ();
  void endGame ();
  void playerLeft ();
  String[] showListOfRooms ();
  int inputRoom (int roomId, String username) throws boggledApp.roomDoesntExistException;
  void playerJoined (String username);
  int getPlayerAvatar (String username);
  boolean updatePlayerAvatar (String username, int avatar);
  boolean updateCredential (String username, String password);
  String[] getLeaderboard ();
  void submitPts (String username, int pts);
  boolean deleteUser (String username);
  boolean logout (String username) throws boggledApp.failedLogOutException;
  void closeRoom (int roomID) throws boggledApp.roomDoesntExistException;
  int getHighScore (String username);
  int setHighScore (String username, int score);
  int setTime ();
  int setTotalScore (String username, int score, int roomID);
  String[] getCurrentGameLeaderboards (int roomID);
  boolean checkPlayerJoined (int roomID);
  void setRoundScore (String username, int score, int roomID);
  String[] getRound1Score (int roomID);
  String[] getRound2Score (int roomID);
  String[] getRound3Score (int roomID);
  String[] getRound4Score (int roomID);
  String[] getRound5Score (int roomID);
  String[] getRound6Score (int roomID);
  String[] getRound7Score (int roomID);
  String[] getRound8Score (int roomID);
  String[] getRound9Score (int roomID);
  String[] getRound10Score (int roomID);
  void sendDone (int roomID);
  boolean checkGameDone (int roomID);
} // interface BoggledOperations
